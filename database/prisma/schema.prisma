// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant{
  id String @id @default(cuid())
  name String
  slug String @unique
  logoUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
  products Product[]
  botConfigs BotConfig?
  chatHistory ChatHistory[]
}

model User{
  id String @id @default(cuid())
  email String @unique
  password String
  role Role @default(USER)
  tenantId String
  tenant Tenant @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())

  @@index([tenantId])
}

enum Role{
  ADMIN
  USER
}

model Product{
  id String @id @default(cuid())
  name String
  description String?
  price Float
  category String?
  imageUrl String?
  stock Int
  tags String[]
  tenantId String
  tenant Tenant @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())

  @@index([tenantId])
}

model BotConfig{
  id String @id @default(cuid())
  tenantId String @unique
  tenant Tenant @relation(fields: [tenantId], references: [id])
  botName String @default("Asistente IA")
  promptStyle String @default("Amable, clara y persuasiva")
  greeting String @default("Hola, soy tu asistente virtual. ¿En qué puedo ayudarte hoy?")
  temperature Float @default(0.7)
  useImages Boolean @default(true)
  aiProvider String @default("gemini") // "gemini", "openai", "auto"
  aiModel String? // Modelo específico como "gpt-4", "gemini-pro"
}

model ChatHistory{
  id String @id @default(cuid())
  tenantId String
  tenant Tenant @relation(fields: [tenantId], references: [id])
  clientPhone String
  direction ChatDirection
  message String
  timestamp DateTime @default(now())

  @@index([tenantId,   clientPhone])
}

enum ChatDirection{
  INCOMING
  OUTGOING
}
